apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-stack-spot
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"    
spec:
  project: default
  destination:
    name: spot-friendly
    namespace: monitoring
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 70.3.0
    helm:
      values: |-
        fullnameOverride: prometheus

        alertmanager:
          enabled: true
          alertmanagerSpec:
            replicas: 1
            retention: 6h
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: gp3
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 1Gi
          service:
            type: ClusterIP

        prometheus:
          prometheusSpec:
            retention: 6h
            walCompression: true
            enableAdminAPI: true     
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: gp3
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 5Gi
            externalLabels:
              cluster: spot-friendly-cluster
            thanos:
              objectStorageConfig:
                existingSecret:
                  name: thanos-objstore-secret
                  key: objstore.yaml

          thanosService:
            enabled: true
          service:
            type: ClusterIP
            port: 9090
            annotations:
              prometheus.io/scrape: "true"

        serviceAccount:
          create: true
          name: prometheus
          annotations:
            eks.amazonaws.com/role-arn: arn:aws:iam::105847046109:role/thanos-irsa
                        
        grafana:
          enabled: true
          grafana.ini:
            live:
              enabled: false
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Prometheus
                  type: prometheus
                  access: proxy
                  url: http://prometheus-prometheus.monitoring.svc:9090
                  isDefault: true

                - name: Loki
                  type: loki
                  access: proxy
                  url: http://loki-spot.logging.svc:3100
                  jsonData:
                    maxLines: 1000

                - name: Tempo
                  type: tempo
                  access: proxy
                  url: http://tempo-spot.tracing.svc:3100
                  jsonData:
                    tracesToLogsV2:
                      datasourceUid: 'loki'
                      tags: ['job', 'instance']
                      mappedTags:
                        - key: 'traceID'
                          value: 'trace.id'
                      mapTagNamesEnabled: true
                      spanStartTimeShift: '-5m'
                      spanEndTimeShift: '5m'
                      filterByTraceID: true
                      filterBySpanID: false          
          service:
            type: ClusterIP
            port: 80
          ingress:
            enabled: false
          sidecar:
            dashboards:
              enabled: true
            datasources:
              enabled: false
      skipCrds: false   
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true      