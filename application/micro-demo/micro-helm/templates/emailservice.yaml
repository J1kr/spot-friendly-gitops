{{- if .Values.emailservice.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
  labels:
    app: emailservice
spec:
  replicas: {{ .Values.emailservice.replicaCount }}
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      serviceAccountName: emailservice
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: "{{ .Values.emailservice.image.repository | default "dmogki/emailservice" }}:{{ .Values.emailservice.image.tag | default "v0.0.0" }}"
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: DISABLE_PROFILER
          value: "1"
        - name: ENABLE_TRACING
          value: "1"
        - name: COLLECTOR_SERVICE_ADDR
          value: "otel-collector-opentelemetry-collector.tracing.svc.cluster.local:4317"
        - name: OTEL_SERVICE_NAME
          value: "emailservice"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
      nodeSelector: {{- toYaml .Values.emailservice.nodeSelector | nindent 8 }}
      affinity: {{- toYaml .Values.emailservice.affinity | nindent 8 }}
      tolerations: {{- toYaml .Values.emailservice.tolerations | nindent 8 }}
      topologySpreadConstraints: {{- toYaml .Values.emailservice.topologySpreadConstraints | nindent 8 }}
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
  labels:
    app: emailservice
spec:
  type: ClusterIP
  selector:
    app: emailservice
  ports:
  - name: grpc
    port: 5000
    targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: emailservice
{{- end }}
