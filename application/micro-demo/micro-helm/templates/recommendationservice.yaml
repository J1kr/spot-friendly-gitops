{{- if .Values.recommendationservice.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  labels:
    app: recommendationservice
spec:
  replicas: {{ .Values.recommendationservice.replicaCount }}
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      serviceAccountName: recommendationservice
      terminationGracePeriodSeconds: 5
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: "{{ .Values.recommendationservice.image.repository | default "dmogki/recommendationservice" }}:{{ .Values.recommendationservice.image.tag | default "v0.0.0" }}"
        ports:
        - containerPort: 8080
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        livenessProbe:
          periodSeconds: 5
          grpc:
            port: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: DISABLE_PROFILER
          value: "1"
        - name: ENABLE_TRACING
          value: "1"
        - name: COLLECTOR_SERVICE_ADDR
          value: "otel-collector-opentelemetry-collector.tracing.svc.cluster.local:4317"
        - name: OTEL_SERVICE_NAME
          value: "recommendationservice"
        resources:
          requests:
            cpu: 200m
            memory: 320Mi
          limits:
            cpu: 500m
            memory: 850Mi
      nodeSelector: {{ toYaml .Values.recommendationservice.nodeSelector | nindent 8 }}
      affinity: {{ toYaml .Values.recommendationservice.affinity | nindent 8 }}
      tolerations: {{ toYaml .Values.recommendationservice.tolerations | nindent 8 }}
      topologySpreadConstraints: {{ toYaml .Values.recommendationservice.topologySpreadConstraints | nindent 8 }}
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
  labels:
    app: recommendationservice
spec:
  type: ClusterIP
  selector:
    app: recommendationservice
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: recommendationservice
{{- if .Values.recommendationservice.pdb.enabled }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: recommendationservice-pdb
spec:
  minAvailable: {{ .Values.recommendationservice.pdb.minAvailable }}
  selector:
    matchLabels:
      app: recommendationservice
{{- end }}
{{- end }}